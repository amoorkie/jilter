// –¢–µ—Å—Ç AI-–∞–Ω–∞–ª–∏–∑–∞ –≤–∞–∫–∞–Ω—Å–∏–∏
require('dotenv').config({ path: '.env.local' });

async function testAIAnalysis() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º AI-–∞–Ω–∞–ª–∏–∑ –≤–∞–∫–∞–Ω—Å–∏–∏...');
  
  try {
    const { analyzeVacancyWithAI } = require('./src/lib/ai/vacancy-analyzer');
    
    const testVacancy = {
      title: "UI/UX Designer",
      company: "Tech Company",
      description: "–ò—â–µ–º UI/UX –¥–∏–∑–∞–π–Ω–µ—Ä–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ –º–æ–±–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏. –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å Figma, –∑–Ω–∞–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ UX, –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ. –£—Å–ª–æ–≤–∏—è: —É–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞, –≥–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫, –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞."
    };
    
    console.log(`üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º: ${testVacancy.title} –æ—Ç ${testVacancy.company}`);
    
    const result = await analyzeVacancyWithAI(
      testVacancy.title,
      testVacancy.company,
      testVacancy.description,
      'https://example.com'
    );
    
    console.log('‚úÖ AI-–∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!');
    console.log('üìù –†–µ–∑—É–ª—å—Ç–∞—Ç:');
    console.log('fullDescription:', result.fullDescription?.substring(0, 100) + '...');
    console.log('requirements:', result.requirements?.substring(0, 100) + '...');
    console.log('tasks:', result.tasks?.substring(0, 100) + '...');
    console.log('conditions:', result.conditions?.substring(0, 100) + '...');
    console.log('benefits:', result.benefits?.substring(0, 100) + '...');
    console.log('technologies:', result.technologies);
    console.log('experienceLevel:', result.experienceLevel);
    console.log('employmentType:', result.employmentType);
    console.log('remoteWork:', result.remoteWork);
    console.log('salaryRange:', result.salaryRange);
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ AI-–∞–Ω–∞–ª–∏–∑–∞:', error.message);
    console.log('üìù –î–µ—Ç–∞–ª–∏:', error.stack);
  }
}

testAIAnalysis();





