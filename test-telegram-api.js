// –¢–µ—Å—Ç Telegram –ø–∞—Ä—Å–∏–Ω–≥–∞ —á–µ—Ä–µ–∑ API
const axios = require('axios');

async function testTelegramAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º Telegram –ø–∞—Ä—Å–∏–Ω–≥ —á–µ—Ä–µ–∑ API...');
  
  try {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥
    console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥...');
    const response = await axios.get('http://localhost:3000/api/vacancies?q=–¥–∏–∑–∞–π–Ω–µ—Ä&maxVacancies=10');
    
    console.log(`üìä –°—Ç–∞—Ç—É—Å: ${response.status}`);
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –≤–∞–∫–∞–Ω—Å–∏–π: ${response.data.vacancies?.length || 0}`);
    
    if (response.data.vacancies && response.data.vacancies.length > 0) {
      console.log('\nüìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏:');
      response.data.vacancies.forEach((vacancy, index) => {
        console.log(`\n${index + 1}. ${vacancy.title}`);
        console.log(`   –ö–æ–º–ø–∞–Ω–∏—è: ${vacancy.company}`);
        console.log(`   –ó–∞—Ä–ø–ª–∞—Ç–∞: ${vacancy.salary}`);
        console.log(`   –ò—Å—Ç–æ—á–Ω–∏–∫: ${vacancy.source}`);
        if (vacancy.source.includes('Telegram')) {
          console.log('   üéØ Telegram –≤–∞–∫–∞–Ω—Å–∏—è!');
        }
      });
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω–∫—É
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω–∫—É...');
    const adminResponse = await axios.get('http://localhost:3000/api/admin/pending');
    console.log(`üìä –û–∂–∏–¥–∞—é—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏: ${adminResponse.data.vacancies?.length || 0}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    if (error.response) {
      console.error('üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', error.response.status);
      console.error('üìä –î–∞–Ω–Ω—ã–µ:', error.response.data);
    }
  }
}

testTelegramAPI();















