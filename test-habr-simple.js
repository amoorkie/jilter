// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –•–∞–±—Ä –ö–∞—Ä—å–µ—Ä–∞
const axios = require('axios');
const cheerio = require('cheerio');

async function testHabrSimple() {
  console.log('üîç –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –•–∞–±—Ä –ö–∞—Ä—å–µ—Ä–∞');
  
  try {
    const url = 'https://career.habr.com/vacancies?type=suitable&q=–¥–∏–∑–∞–π–Ω–µ—Ä&page=1';
    console.log(`üì° –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º: ${url}`);
    
    const response = await axios.get(url, {
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
        'Accept-Language': 'ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3'
      }
    });
    
    const $ = cheerio.load(response.data);
    const vacancies = [];
    
    // –ò—â–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –≤–∞–∫–∞–Ω—Å–∏–π
    const cards = $('.vacancy-card');
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫: ${cards.length}`);
    
    cards.each((index, element) => {
      try {
        console.log(`\nüîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É ${index}`);
        
        // –ò—â–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é
        const vacancyLinks = $(element).find('a[href*="/vacancies/"]').not('[href*="/companies/"]');
        console.log(`üîó –ù–∞–π–¥–µ–Ω–æ —Å—Å—ã–ª–æ–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏–∏: ${vacancyLinks.length}`);
        
        if (vacancyLinks.length > 0) {
          const titleElement = vacancyLinks.first();
          const title = titleElement.text().trim();
          const url = titleElement.attr('href') || '';
          
          console.log(`üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫: "${title}"`);
          console.log(`üîó URL: "${url}"`);
          
          if (title && url) {
            // –ò—â–µ–º –∫–æ–º–ø–∞–Ω–∏—é
            const companyLinks = $(element).find('a[href*="/companies/"]');
            const company = companyLinks.length > 0 ? companyLinks.first().text().trim() : '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
            
            console.log(`üè¢ –ö–æ–º–ø–∞–Ω–∏—è: "${company}"`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å
            const isRelevant = title.toLowerCase().includes('–¥–∏–∑–∞–π–Ω') || 
                             title.toLowerCase().includes('designer') ||
                             title.toLowerCase().includes('ui') ||
                             title.toLowerCase().includes('ux');
            
            if (isRelevant) {
              console.log(`‚úÖ –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–∞—è –≤–∞–∫–∞–Ω—Å–∏—è: "${title}"`);
              vacancies.push({
                id: `habr-${index}`,
                title,
                company,
                salary: '–ù–µ —É–∫–∞–∑–∞–Ω–∞',
                url: url.startsWith('http') ? url : `https://career.habr.com${url}`,
                source: 'habr'
              });
            } else {
              console.log(`‚ùå –ù–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–∞—è: "${title}"`);
            }
          }
        }
        
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è —Ç–µ—Å—Ç–∞
        if (index >= 4) {
          return false; // –ü—Ä–µ—Ä—ã–≤–∞–µ–º —Ü–∏–∫–ª
        }
        
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ ${index}:`, error.message);
      }
    });
    
    console.log(`\nüéâ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${vacancies.length} —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π`);
    vacancies.forEach((vacancy, i) => {
      console.log(`${i + 1}. "${vacancy.title}" - ${vacancy.company}`);
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

testHabrSimple();















