// test-hh-fixed.js - —Ç–µ—Å—Ç —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º User-Agent
const testHHAPIFixed = async () => {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º HH.ru API —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º User-Agent...');
    
    const url = 'https://api.hh.ru/vacancies?text=–¥–∏–∑–∞–π–Ω–µ—Ä&per_page=10&area=113';
    console.log('üì° URL:', url);
    
    const response = await fetch(url, {
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
      },
    });
    
    console.log('üìä –°—Ç–∞—Ç—É—Å:', response.status, response.statusText);
    
    if (response.ok) {
      const data = await response.json();
      console.log('üìä –ù–∞–π–¥–µ–Ω–æ –≤–∞–∫–∞–Ω—Å–∏–π:', data.items?.length || 0);
      
      if (data.items && data.items.length > 0) {
        console.log('üéâ –ü–µ—Ä–≤–∞—è –≤–∞–∫–∞–Ω—Å–∏—è:', data.items[0].name);
        console.log('üè¢ –ö–æ–º–ø–∞–Ω–∏—è:', data.items[0].employer.name);
        console.log('üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞:', data.items[0].salary ? '–ï—Å—Ç—å' : '–ù–µ—Ç');
      }
    } else {
      const errorText = await response.text();
      console.log('‚ùå –û—à–∏–±–∫–∞:', errorText);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
};

testHHAPIFixed();

