// –î–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –•–∞–±—Ä –ö–∞—Ä—å–µ—Ä–∞
const axios = require('axios');
const cheerio = require('cheerio');

async function testHabrDetailed() {
  console.log('üîç –î–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –•–∞–±—Ä –ö–∞—Ä—å–µ—Ä–∞');
  
  try {
    const url = 'https://career.habr.com/vacancies?type=suitable&q=–¥–∏–∑–∞–π–Ω–µ—Ä&page=1';
    console.log(`üì° –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º: ${url}`);
    
    const response = await axios.get(url, {
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
        'Accept-Language': 'ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3'
      }
    });
    
    console.log(`üìä –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: ${response.data.length} —Å–∏–º–≤–æ–ª–æ–≤`);
    
    const $ = cheerio.load(response.data);
    
    // –ò—â–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
    const selectors = [
      '.vacancy-card',
      '.vacancy-item',
      '.job-card',
      '[data-vacancy]',
      '.vacancy',
      '.post',
      '.card',
      '.item'
    ];
    
    for (const selector of selectors) {
      const elements = $(selector);
      if (elements.length > 0) {
        console.log(`\n‚úÖ –ù–∞–π–¥–µ–Ω —Å–µ–ª–µ–∫—Ç–æ—Ä: ${selector} (${elements.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤)`);
        
        // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
        const firstElement = elements.first();
        console.log(`üìã HTML –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞:`);
        console.log(firstElement.html().substring(0, 500) + '...');
        
        // –ò—â–µ–º —Å—Å—ã–ª–∫–∏
        const links = firstElement.find('a');
        console.log(`üîó –ù–∞–π–¥–µ–Ω–æ —Å—Å—ã–ª–æ–∫: ${links.length}`);
        
        links.each((i, link) => {
          const href = $(link).attr('href');
          const text = $(link).text().trim();
          if (href && text) {
            console.log(`   ${i + 1}. "${text}" -> ${href}`);
          }
        });
        
        // –ò—â–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
        const headings = firstElement.find('h1, h2, h3, h4, h5, h6');
        console.log(`üìù –ù–∞–π–¥–µ–Ω–æ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤: ${headings.length}`);
        
        headings.each((i, heading) => {
          const text = $(heading).text().trim();
          if (text) {
            console.log(`   ${i + 1}. "${text}"`);
          }
        });
        
        break; // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è –Ω–∞ –ø–µ—Ä–≤–æ–º –Ω–∞–π–¥–µ–Ω–Ω–æ–º —Å–µ–ª–µ–∫—Ç–æ—Ä–µ
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

testHabrDetailed();















