// scripts/init-database.ts
import { supabase } from '../src/lib/database/config';
import fs from 'fs';
import path from 'path';

async function initDatabase() {
  console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

  try {
    // 1. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
    console.log('üìã –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...');
    const migrationSQL = fs.readFileSync(
      path.join(__dirname, '../src/lib/database/migrations/001_initial_schema.sql'),
      'utf8'
    );

    const { error: migrationError } = await supabase.rpc('exec_sql', {
      sql: migrationSQL
    });

    if (migrationError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü:', migrationError);
      return;
    }

    console.log('‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã');

    // 2. –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–æ–∫—Å–∏—á–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã
    console.log('üå± –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–æ–∫—Å–∏—á–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤...');
    const seedSQL = fs.readFileSync(
      path.join(__dirname, '../src/lib/database/seeds/001_toxic_tokens.sql'),
      'utf8'
    );

    const { error: seedError } = await supabase.rpc('exec_sql', {
      sql: seedSQL
    });

    if (seedError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤:', seedError);
      return;
    }

    console.log('‚úÖ –¢–æ–∫—Å–∏—á–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã');

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Å–æ–∑–¥–∞–ª–æ—Å—å
    const { data: tokens, error: tokensError } = await supabase
      .from('toxic_tokens')
      .select('count(*)');

    if (tokensError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤:', tokensError);
      return;
    }

    console.log(`‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞. –¢–æ–∫–µ–Ω–æ–≤: ${tokens?.length || 0}`);

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
initDatabase();

