// test-fixed-api.js - —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ API
const testFixedAPI = async () => {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π API...');
    
    // –¢–µ—Å—Ç —Å —Ä–∞–∑–Ω—ã–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏
    const queries = ['–¥–∏–∑–∞–π–Ω–µ—Ä', 'javascript', 'python', '—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫'];
    
    for (const query of queries) {
      console.log(`\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å: "${query}"`);
      
      const response = await fetch(`http://localhost:3000/api/vacancies?query=${encodeURIComponent(query)}&salary=false`);
      const data = await response.json();
      
      console.log(`üìä –°—Ç–∞—Ç—É—Å: ${response.status}, –ù–∞–π–¥–µ–Ω–æ: ${data.vacancies?.length || 0}`);
      
      if (data.vacancies && data.vacancies.length > 0) {
        console.log(`üéâ –ü–µ—Ä–≤–∞—è –≤–∞–∫–∞–Ω—Å–∏—è: ${data.vacancies[0].title}`);
        console.log(`üè¢ –ö–æ–º–ø–∞–Ω–∏—è: ${data.vacancies[0].company}`);
        console.log(`üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞: ${data.vacancies[0].salary}`);
        break; // –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –≤–∞–∫–∞–Ω—Å–∏–∏, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è
      } else {
        console.log('‚ùå –í–∞–∫–∞–Ω—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
};

testFixedAPI();
























