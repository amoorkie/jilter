// –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
const { VacancyMonitor } = require('./src/lib/monitoring/scheduler.ts');

console.log('üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤–∞–∫–∞–Ω—Å–∏–π...');

// –°–æ–∑–¥–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
const monitor = new VacancyMonitor({
  fullScanInterval: 4 * 60 * 60 * 1000, // 4 —á–∞—Å–∞
  quickScanInterval: 60 * 60 * 1000, // 1 —á–∞—Å
  maxVacanciesPerSource: 50,
  maxTotalVacancies: 200,
  enableAIAnalysis: false, // –û—Ç–∫–ª—é—á–∞–µ–º AI –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
  aiAnalysisBatchSize: 10,
  enableNotifications: true,
  notificationThreshold: 5
});

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
monitor.start();

console.log('‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω!');
console.log('üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:');
console.log('  - –ë—ã—Å—Ç—Ä—ã–π –ø–∞—Ä—Å–∏–Ω–≥: –∫–∞–∂–¥—ã–µ 60 –º–∏–Ω—É—Ç');
console.log('  - –ü–æ–ª–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥: –∫–∞–∂–¥—ã–µ 4 —á–∞—Å–∞');
console.log('  - –ü–µ—Ä–∏–æ–¥ —Å–±–æ—Ä–∞: –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –¥–Ω—è');

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on('SIGINT', () => {
  console.log('\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...');
  monitor.stop();
  process.exit(0);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
process.on('uncaughtException', (error) => {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  monitor.stop();
  process.exit(1);
});
