// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç Geekjob
const axios = require('axios');
const cheerio = require('cheerio');

async function testGeekjobSimple() {
  console.log('üîç –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç Geekjob');
  
  try {
    const url = 'https://geekjob.ru/?q=–¥–∏–∑–∞–π–Ω–µ—Ä&page=1';
    const response = await axios.get(url, {
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
        'Accept-Language': 'ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3'
      }
    });
    
    const $ = cheerio.load(response.data);
    const vacancies = [];
    
    // –ò—â–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏–∏
    const vacancyLinks = $('a[href*="/vacancy/"]');
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —Å—Å—ã–ª–æ–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏–∏: ${vacancyLinks.length}`);
    
    vacancyLinks.each((index, link) => {
      try {
        const title = $(link).text().trim();
        const url = $(link).attr('href') || '';
        
        if (title && url) {
          console.log(`\nüîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∞–∫–∞–Ω—Å–∏—é ${index}: "${title}"`);
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å
          const isRelevant = title.toLowerCase().includes('–¥–∏–∑–∞–π–Ω') || 
                           title.toLowerCase().includes('designer') ||
                           title.toLowerCase().includes('ui') ||
                           title.toLowerCase().includes('ux');
          
          if (isRelevant) {
            console.log(`‚úÖ –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–∞—è –≤–∞–∫–∞–Ω—Å–∏—è: "${title}"`);
            vacancies.push({
              id: `geekjob-${index}`,
              title,
              company: '–ù–µ —É–∫–∞–∑–∞–Ω–∞', // –ü–æ–∫–∞ –Ω–µ –∏—â–µ–º –∫–æ–º–ø–∞–Ω–∏—é
              salary: '–ù–µ —É–∫–∞–∑–∞–Ω–∞',
              url: url.startsWith('http') ? url : `https://geekjob.ru${url}`,
              source: 'geekjob'
            });
          } else {
            console.log(`‚ùå –ù–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–∞—è: "${title}"`);
          }
        }
        
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è —Ç–µ—Å—Ç–∞
        if (index >= 9) {
          return false; // –ü—Ä–µ—Ä—ã–≤–∞–µ–º —Ü–∏–∫–ª
        }
        
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Å—ã–ª–∫–∏ ${index}:`, error.message);
      }
    });
    
    console.log(`\nüéâ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${vacancies.length} —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π`);
    vacancies.forEach((vacancy, i) => {
      console.log(`${i + 1}. "${vacancy.title}"`);
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

testGeekjobSimple();















