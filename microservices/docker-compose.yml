version: '3.8'

services:
  # Gateway Service (Next.js)
  gateway:
    build: ./gateway
    ports:
      - "3000:3000"
    environment:
      - ADMIN_SERVICE_URL=http://admin-service:3001
      - PARSER_SERVICE_URL=http://parser-service:8080
      - DATABASE_SERVICE_URL=http://database-service:8081
      - QUEUE_SERVICE_URL=http://queue-service:8082
      - SEARCH_SERVICE_URL=http://search-service:8083
      - AI_SERVICE_URL=http://ai-service:5000
    depends_on:
      - admin-service
      - parser-service
      - database-service
      - queue-service
      - search-service
      - ai-service

  # Admin Service (Node.js)
  admin-service:
    build: ./admin-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://jobfilter:password@postgres:5432/jobfilter
      - REDIS_URL=redis://redis:6379
      - QUEUE_SERVICE_URL=http://queue-service:8082
    depends_on:
      - postgres
      - redis

  # Parser Service (Go)
  parser-service:
    build: ./parser-service
    ports:
      - "8080:8080"
    environment:
      - DATABASE_SERVICE_URL=http://database-service:8081
      - QUEUE_SERVICE_URL=http://queue-service:8082
      - AI_SERVICE_URL=http://ai-service:5000
    depends_on:
      - database-service
      - queue-service
      - ai-service

  # Database Service (Java)
  database-service:
    build: ./database-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/jobfilter
      - SPRING_DATASOURCE_USERNAME=jobfilter
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      - postgres

  # Queue Service (Java)
  queue-service:
    build: ./queue-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - DATABASE_SERVICE_URL=http://database-service:8081
      - AI_SERVICE_URL=http://ai-service:5000
    depends_on:
      - rabbitmq
      - database-service
      - ai-service

  # Search Service (Java)
  search-service:
    build: ./search-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - DATABASE_SERVICE_URL=http://database-service:8081
    depends_on:
      - elasticsearch
      - database-service

  # AI Service (Python)
  ai-service:
    build: ./ai-service
    ports:
      - "5000:5000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DATABASE_SERVICE_URL=http://database-service:8081
    depends_on:
      - database-service

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=jobfilter
      - POSTGRES_USER=jobfilter
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  # Elasticsearch Search Engine
  elasticsearch:
    image: elasticsearch:8.8.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  elasticsearch_data:

networks:
  default:
    name: job-filter-network







