// –¢–µ—Å—Ç Telegram –≤–µ–±-–ø–∞—Ä—Å–∏–Ω–≥–∞
const axios = require('axios');
const cheerio = require('cheerio');

async function testTelegramWeb() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º Telegram –≤–µ–±-–ø–∞—Ä—Å–∏–Ω–≥...');
  
  try {
    const channels = [
      'designhunters',
      'designjobs',
      'uxjobs'
    ];
    
    for (const channel of channels) {
      console.log(`\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–Ω–∞–ª @${channel}:`);
      
      try {
        const url = `https://t.me/${channel}`;
        console.log(`  üåê URL: ${url}`);
        
        const response = await axios.get(url, {
          headers: {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'
          },
          timeout: 10000
        });
        
        console.log(`  ‚úÖ –°—Ç–∞—Ç—É—Å: ${response.status}`);
        console.log(`  üìä –†–∞–∑–º–µ—Ä: ${response.data.length} —Å–∏–º–≤–æ–ª–æ–≤`);
        
        const $ = cheerio.load(response.data);
        
        // –ò—â–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
        const selectors = [
          '.tgme_widget_message',
          '.message',
          '.post',
          '[data-post]',
          '.tgme_widget_message_text'
        ];
        
        for (const selector of selectors) {
          const elements = $(selector);
          console.log(`  üîç –°–µ–ª–µ–∫—Ç–æ—Ä "${selector}": ${elements.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`);
          
          if (elements.length > 0) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            elements.slice(0, 3).each((index, element) => {
              const text = $(element).text().trim();
              if (text) {
                console.log(`    üìù –≠–ª–µ–º–µ–Ω—Ç ${index + 1}: ${text.substring(0, 100)}...`);
              }
            });
          }
        }
        
        // –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–∏–∑–∞–π–Ω–∞
        const designKeywords = ['–¥–∏–∑–∞–π–Ω', '–¥–∏–∑–∞–π–Ω–µ—Ä', 'ui', 'ux', 'designer'];
        let foundKeywords = 0;
        
        for (const keyword of designKeywords) {
          if (response.data.toLowerCase().includes(keyword)) {
            foundKeywords++;
            console.log(`  üéØ –ù–∞–π–¥–µ–Ω–æ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ: "${keyword}"`);
          }
        }
        
        console.log(`  üìä –ù–∞–π–¥–µ–Ω–æ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤: ${foundKeywords}/${designKeywords.length}`);
        
      } catch (error) {
        console.log(`  ‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
}

testTelegramWeb();















