'use client';

import { useState } from 'react';

export default function PDFManager() {
  const [isExporting, setIsExporting] = useState(false);
  const [isImporting, setIsImporting] = useState(false);
  const [exportResult, setExportResult] = useState<any>(null);
  const [importResult, setImportResult] = useState<any>(null);
  const [selectedFile, setSelectedFile] = useState<File | null>(null);

  const handleExportPDF = async () => {
    setIsExporting(true);
    setExportResult(null);

    try {
      const response = await fetch('/api/admin/export-pdf', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ type: 'all' }),
      });

      const result = await response.json();
      setExportResult(result);
    } catch (error) {
      setExportResult({
        success: false,
        error: '–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ PDF'
      });
    } finally {
      setIsExporting(false);
    }
  };

  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (file && file.type === 'application/pdf') {
      setSelectedFile(file);
    } else {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ PDF —Ñ–∞–π–ª');
    }
  };

  const handleImportPDF = async () => {
    if (!selectedFile) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞');
      return;
    }

    setIsImporting(true);
    setImportResult(null);

    try {
      const formData = new FormData();
      formData.append('file', selectedFile);

      const response = await fetch('/api/admin/import-pdf', {
        method: 'POST',
        body: formData,
      });

      const result = await response.json();
      setImportResult(result);
    } catch (error) {
      setImportResult({
        success: false,
        error: '–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ PDF'
      });
    } finally {
      setIsImporting(false);
    }
  };

  const downloadPDF = (filename: string) => {
    window.open(`/api/admin/download-pdf?file=${filename}`, '_blank');
  };

  return (
    <div className="space-y-6">
      <div>
        <h2 className="text-xl font-semibold text-gray-900 mb-4">
          –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ PDF —Ñ–∞–π–ª–∞–º–∏
        </h2>
        <p className="text-gray-600">
          –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –≤ PDF –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ ChatGPT, –∑–∞—Ç–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –æ–±—Ä–∞—Ç–Ω–æ.
        </p>
      </div>

      {/* –≠–∫—Å–ø–æ—Ä—Ç PDF */}
      <div className="bg-white p-6 rounded-lg border border-gray-200">
        <h3 className="text-lg font-medium text-gray-900 mb-4">
          üì§ –≠–∫—Å–ø–æ—Ä—Ç –≤–∞–∫–∞–Ω—Å–∏–π –≤ PDF
        </h3>
        
        <div className="space-y-4">
          <p className="text-sm text-gray-600">
            –°–æ–∑–¥–∞–µ—Ç PDF —Ñ–∞–π–ª —Å–æ –≤—Å–µ–º–∏ –≤–∞–∫–∞–Ω—Å–∏—è–º–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ ChatGPT.
          </p>
          
          <button
            onClick={handleExportPDF}
            disabled={isExporting}
            className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed"
          >
            {isExporting ? '–°–æ–∑–¥–∞–Ω–∏–µ PDF...' : '–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ PDF'}
          </button>
          
          {exportResult && (
            <div className={`p-4 rounded-md ${
              exportResult.success ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'
            }`}>
              {exportResult.success ? (
                <div>
                  <p className="text-green-800 font-medium">PDF —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!</p>
                  <p className="text-sm text-green-700 mt-1">
                    –§–∞–π–ª: {exportResult.filename}
                  </p>
                  <button
                    onClick={() => downloadPDF(exportResult.filename)}
                    className="mt-2 px-3 py-1 bg-green-600 text-white text-sm rounded hover:bg-green-700"
                  >
                    –°–∫–∞—á–∞—Ç—å PDF
                  </button>
                </div>
              ) : (
                <div>
                  <p className="text-red-800 font-medium">–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è PDF</p>
                  <p className="text-sm text-red-700 mt-1">
                    {exportResult.error}
                  </p>
                </div>
              )}
            </div>
          )}
        </div>
      </div>

      {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è ChatGPT */}
      <div className="bg-yellow-50 p-6 rounded-lg border border-yellow-200">
        <h3 className="text-lg font-medium text-yellow-800 mb-4">
          ü§ñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è ChatGPT
        </h3>
        
        <div className="space-y-3 text-sm text-yellow-700">
          <p><strong>–ü–æ—Å–ª–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è PDF:</strong></p>
          <ol className="list-decimal list-inside space-y-1 ml-4">
            <li>–ó–∞–≥—Ä—É–∑–∏—Ç–µ PDF —Ñ–∞–π–ª –≤ ChatGPT</li>
            <li>–ü–æ–ø—Ä–æ—Å–∏—Ç–µ ChatGPT –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–π</li>
            <li>–ü–æ–ø—Ä–æ—Å–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É (–í–ê–ö–ê–ù–°–ò–Ø #ID, –∑–∞–≥–æ–ª–æ–≤–æ–∫, –∫–æ–º–ø–∞–Ω–∏—è, –æ–ø–∏—Å–∞–Ω–∏–µ)</li>
            <li>–°–∫–∞—á–∞–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π PDF —Ñ–∞–π–ª</li>
            <li>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –µ–≥–æ –æ–±—Ä–∞—Ç–Ω–æ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –Ω–∏–∂–µ</li>
          </ol>
        </div>
      </div>

      {/* –ò–º–ø–æ—Ä—Ç PDF */}
      <div className="bg-white p-6 rounded-lg border border-gray-200">
        <h3 className="text-lg font-medium text-gray-900 mb-4">
          üì• –ò–º–ø–æ—Ä—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ PDF
        </h3>
        
        <div className="space-y-4">
          <p className="text-sm text-gray-600">
            –ó–∞–≥—Ä—É–∑–∏—Ç–µ PDF —Ñ–∞–π–ª, –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –≤ ChatGPT, –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏–π –≤–∞–∫–∞–Ω—Å–∏–π.
          </p>
          
          <div>
            <input
              type="file"
              accept=".pdf"
              onChange={handleFileSelect}
              className="block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100"
            />
            {selectedFile && (
              <p className="text-sm text-gray-600 mt-2">
                –í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª: {selectedFile.name}
              </p>
            )}
          </div>
          
          <button
            onClick={handleImportPDF}
            disabled={isImporting || !selectedFile}
            className="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 disabled:bg-gray-400 disabled:cursor-not-allowed"
          >
            {isImporting ? '–ò–º–ø–æ—Ä—Ç...' : '–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å PDF'}
          </button>
          
          {importResult && (
            <div className={`p-4 rounded-md ${
              importResult.success ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'
            }`}>
              {importResult.success ? (
                <div>
                  <p className="text-green-800 font-medium">PDF —Ñ–∞–π–ª –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!</p>
                  <p className="text-sm text-green-700 mt-1">
                    {importResult.message}
                  </p>
                </div>
              ) : (
                <div>
                  <p className="text-red-800 font-medium">–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ PDF</p>
                  <p className="text-sm text-red-700 mt-1">
                    {importResult.error}
                  </p>
                </div>
              )}
            </div>
          )}
        </div>
      </div>
    </div>
  );
}








