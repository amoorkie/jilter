// –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø–∞—Ä—Å–µ—Ä –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î
import { parseGeekjobVacancies } from './geekjob/parser';
import { parseHHVacancies } from './hh/parser';
import { parseHireHiVacancies } from './hirehi/parser';
import { Vacancy } from './types';

export const parseAllVacancies = async (query: string = "–¥–∏–∑–∞–π–Ω–µ—Ä", maxVacancies: number = 50): Promise<Vacancy[]> => {
  console.log(`üöÄ –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞: "${query}"`);
  console.log(`üìä –ú–∞–∫—Å–∏–º—É–º –≤–∞–∫–∞–Ω—Å–∏–π: ${maxVacancies}`);

  try {
    // –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –ª–∏–º–∏—Ç –º–µ–∂–¥—É –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏
    const geekjobLimit = Math.floor(maxVacancies / 3);
    const hhLimit = Math.floor(maxVacancies / 3);
    const hirehiLimit = Math.floor(maxVacancies / 3);

    console.log(`üìä –õ–∏–º–∏—Ç—ã: Geekjob=${geekjobLimit}, HH=${hhLimit}, HireHi=${hirehiLimit}`);

    // –ü–∞—Ä—Å–∏–º –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    const [geekjobVacancies, hhVacancies, hirehiVacancies] = await Promise.all([
      parseGeekjobVacancies(query, geekjobLimit).catch(error => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ Geekjob:', error);
        return [];
      }),
      parseHHVacancies(query, 2).catch(error => { // 2 —Å—Ç—Ä–∞–Ω–∏—Ü—ã HH
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ HH.ru:', error);
        return [];
      }),
      parseHireHiVacancies(query, hirehiLimit).catch(error => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ HireHi:', error);
        return [];
      })
    ]);

    // –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –∫ –∫–∞–∂–¥–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏
    const geekjobWithSource = geekjobVacancies.map(v => ({ ...v, source: 'geekjob' }));
    const hhWithSource = hhVacancies.map(v => ({ ...v, source: 'hh' }));
    const hirehiWithSource = hirehiVacancies.map(v => ({ ...v, source: 'hirehi' }));

    // –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –≤–∞–∫–∞–Ω—Å–∏–∏
    const allVacancies = [...geekjobWithSource, ...hhWithSource, ...hirehiWithSource];

    console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–∞—Ä—Å–∏–Ω–≥–∞:`);
    console.log(`   Geekjob: ${geekjobVacancies.length} –≤–∞–∫–∞–Ω—Å–∏–π`);
    console.log(`   HH.ru: ${hhVacancies.length} –≤–∞–∫–∞–Ω—Å–∏–π`);
    console.log(`   HireHi: ${hirehiVacancies.length} –≤–∞–∫–∞–Ω—Å–∏–π`);
    console.log(`   –í—Å–µ–≥–æ: ${allVacancies.length} –≤–∞–∫–∞–Ω—Å–∏–π`);

    return allVacancies;

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞:', error);
    return [];
  }
};















