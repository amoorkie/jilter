// src/lib/parsers/pagination-parser.ts
import { chromium } from 'playwright';
import { Vacancy } from './unified-parser';
import { parseHireHiVacancies } from './hirehi/parser';
import { mapEmployment } from '../types/employment';
import { updateVacanciesWithRealEmployment } from './real-employment-parser';
import { parseAllEmploymentTypes } from './hh-filtered-parser';

/**
 * –ü–∞—Ä—Å–µ—Ä —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –¥–ª—è —Å–±–æ—Ä–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π
 */
export async function parseWithPagination(
  source: 'geekjob' | 'hh',
  query: string = "javascript",
  maxPages: number = 20
): Promise<Vacancy[]> {
  const browser = await chromium.launch({ headless: true });
  const page = await browser.newPage();

  try {
    await page.setExtraHTTPHeaders({
      'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
      'Accept-Language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
    });

    let url: string;
    let selector: string;
    let nextPageSelector: string;

    if (source === 'geekjob') {
      url = `https://geekjob.ru/?q=${encodeURIComponent(query)}`;
      selector = '.collection-item';
      nextPageSelector = '.pagination a[rel="next"], .pagination .next';
    } else {
      url = `https://hh.ru/search/vacancy?text=${encodeURIComponent(query)}&area=1`;
      selector = '[data-qa="vacancy-serp__vacancy"]';
      nextPageSelector = '[data-qa="pager-next"]';
    }

    console.log(`üîç –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ ${source} —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π: ${url}`);
    
    const allVacancies: Vacancy[] = [];
    let currentPage = 1;
    let hasNextPage = true;

    while (hasNextPage && currentPage <= maxPages) {
      console.log(`üìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É ${currentPage}...`);
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
      if (currentPage === 1) {
        await page.goto(url, { waitUntil: 'networkidle' });
      } else {
        // –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞" –∏ –∫–ª–∏–∫–∞–µ–º
        try {
          await page.waitForSelector(nextPageSelector, { timeout: 5000 });
          await page.click(nextPageSelector);
          await page.waitForTimeout(3000); // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        } catch (error) {
          console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${error}`);
          hasNextPage = false;
          break;
        }
      }

      // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–π
      try {
        await page.waitForSelector(selector, { timeout: 10000 });
      } catch (error) {
        console.log(`‚ö†Ô∏è –í–∞–∫–∞–Ω—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${currentPage}`);
        break;
      }

      // –°–æ–±–∏—Ä–∞–µ–º –≤–∞–∫–∞–Ω—Å–∏–∏ —Å —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      const pageVacancies = await page.evaluate((config) => {
        const cards = document.querySelectorAll(config.selector);
        const results = [];
        
        console.log(`üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º ${cards.length} –∫–∞—Ä—Ç–æ—á–µ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ...`);

        cards.forEach((card, index) => {
          try {
            if (config.source === 'geekjob') {
              // –õ–æ–≥–∏–∫–∞ –¥–ª—è Geekjob —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö
              const vacancyLink = card.querySelector('a[href*="/vacancy/"]');
              if (!vacancyLink) return;

              const allLinks = Array.from(card.querySelectorAll('a[href*="/vacancy/"]'));
              if (allLinks.length === 0) return;

              const titleElement = allLinks.find(link => 
                link.textContent?.trim() && !link.querySelector('img')
              ) || allLinks[0];

              const companyElement = allLinks[allLinks.length - 1];
              const logoElement = card.querySelector('.vacancy-list-logo');

              // –ò—â–µ–º –∑–∞—Ä–ø–ª–∞—Ç—É –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ
              const salaryText = Array.from(card.querySelectorAll('*')).find(el => {
                const text = el.textContent || '';
                return (text.includes('‚ÇΩ') || text.includes('—Ä—É–±')) && 
                       text.length < 30 && // –£–º–µ–Ω—å—à–∞–µ–º –¥–ª–∏–Ω—É –µ—â–µ –±–æ–ª—å—à–µ
                       text.length > 5 && // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞
                       !text.includes('–æ—Ç') && !text.includes('–¥–æ') &&
                       !text.includes('Frontend') && !text.includes('Backend') && // –ò—Å–∫–ª—é—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π
                       !text.includes('Developer') && !text.includes('Engineer') &&
                       !text.includes('—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫') && !text.includes('—Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫') &&
                       !text.includes('–∞–Ω–∞–ª–∏—Ç–∏–∫') && !text.includes('–º–µ–Ω–µ–¥–∂–µ—Ä') &&
                       !text.includes('–¥–∏–∑–∞–π–Ω–µ—Ä') && !text.includes('–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç') &&
                       !text.includes('—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç') && !text.includes('–∏–Ω–∂–µ–Ω–µ—Ä') &&
                       !text.includes('–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç') && !text.includes('—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å') &&
                       /[\d]/.test(text); // –î–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Ü–∏—Ñ—Ä—É
              });

              let title = titleElement?.textContent?.trim() || '';
              const company = companyElement?.textContent?.trim() || '';
              let salary = salaryText?.textContent?.trim() || '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
              
              // –û—á–∏—â–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ç –∑–∞—Ä–ø–ª–∞—Ç—ã
              if (title.includes('‚ÇΩ') || title.includes('—Ä—É–±')) {
                const parts = title.split(/[‚ÇΩ—Ä—É–±]/);
                title = parts[0].trim();
              }
              
              // –û—á–∏—â–∞–µ–º –∑–∞—Ä–ø–ª–∞—Ç—É –æ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
              if (salary.includes('Frontend') || salary.includes('Backend') || 
                  salary.includes('Developer') || salary.includes('Engineer') ||
                  salary.includes('—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫') || salary.includes('—Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫') ||
                  salary.includes('–∞–Ω–∞–ª–∏—Ç–∏–∫') || salary.includes('–º–µ–Ω–µ–¥–∂–µ—Ä') ||
                  salary.includes('–¥–∏–∑–∞–π–Ω–µ—Ä') || salary.includes('–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç') ||
                  salary.includes('—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç') || salary.includes('–∏–Ω–∂–µ–Ω–µ—Ä') ||
                  salary.includes('–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç') || salary.includes('—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å')) {
                salary = '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
              }
              
              // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –µ—Å–ª–∏ –∑–∞—Ä–ø–ª–∞—Ç–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è, —ç—Ç–æ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ
              if (salary.length > 30) {
                salary = '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
              }
              
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞—Ä–ø–ª–∞—Ç–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–±–µ–ª—ã, –¥–µ—Ñ–∏—Å—ã –∏ —Å–∏–º–≤–æ–ª—ã –≤–∞–ª—é—Ç
              if (salary !== '–ù–µ —É–∫–∞–∑–∞–Ω–∞' && !/^[\d\s\-‚ÇΩ—Ä—É–±\.\,]+$/.test(salary)) {
                salary = '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
              }
              
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞—Ä–ø–ª–∞—Ç–∞ –Ω–µ —Ä–∞–≤–Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—é –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
              if (salary === title) {
                salary = '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
              }

              const url = vacancyLink.getAttribute('href') || '';
              const logo = logoElement?.getAttribute('src') || '';

              if (title && company && url) {
                // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∑–∞–Ω—è—Ç–æ—Å—Ç–∏
                const employment = mapEmployment('geekjob', `${title}`);
                console.log(`üîç Pagination Geekjob –≤–∞–∫–∞–Ω—Å–∏—è "${title}" - –æ–ø—Ä–µ–¥–µ–ª–µ–Ω —Ç–∏–ø –∑–∞–Ω—è—Ç–æ—Å—Ç–∏: [${employment.join(', ')}]`);
                
                results.push({
                  id: `geekjob-p${config.currentPage}-${index}`,
                  title,
                  salary,
                  company,
                  url: url.startsWith('http') ? url : `https://geekjob.ru${url}`,
                  companyLogo: logo ? (logo.startsWith('http') ? logo : `https://geekjob.ru${logo}`) : undefined,
                  employment
                });
              }

            } else {
              // –õ–æ–≥–∏–∫–∞ –¥–ª—è HH.ru —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö
              const titleElement = card.querySelector('[data-qa="serp-item__title"]');
              let title = titleElement?.textContent?.trim() || '';

              const allLinks = Array.from(card.querySelectorAll('a'));
              const vacancyLink = allLinks.find(link => 
                link.getAttribute('href')?.includes('/vacancy/')
              );
              const url = vacancyLink?.getAttribute('href') || '';

              const companyLinks = allLinks.filter(link =>
                link.getAttribute('href')?.includes('/employer/')
              );
              const companyElement = companyLinks.find(link => link.textContent?.trim()) || companyLinks[0];
              const company = companyElement?.textContent?.trim() || '';
              const companyUrl = companyElement?.getAttribute('href') || '';

              const logoElement = card.querySelector('img[src*="employer-logo"]');
              const logo = logoElement?.getAttribute('src') || '';

              // –ò—â–µ–º –∑–∞—Ä–ø–ª–∞—Ç—É –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ - —Ç–æ–ª—å–∫–æ –≤ —ç–ª–µ–º–µ–Ω—Ç–∞—Ö —Å –∑–∞—Ä–ø–ª–∞—Ç–æ–π
              const salaryElement = card.querySelector('[data-qa="vacancy-serp__vacancy-compensation"]') || 
                                   card.querySelector('.bloko-header-section-2') ||
                                   Array.from(card.querySelectorAll('*')).find(el => {
                                     const text = el.textContent || '';
                                     return (text.includes('‚ÇΩ') || text.includes('—Ä—É–±')) && 
                                            text.length < 30 && // –£–º–µ–Ω—å—à–∞–µ–º –¥–ª–∏–Ω—É –µ—â–µ –±–æ–ª—å—à–µ
                                            text.length > 5 && // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞
                                            !text.includes('–æ—Ç') && !text.includes('–¥–æ') && 
                                            !text.includes('–∑–∞ –º–µ—Å—è—Ü') && !text.includes('–∑–∞ –≥–æ–¥') &&
                                            !text.includes('Frontend') && !text.includes('Backend') && // –ò—Å–∫–ª—é—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π
                                            !text.includes('Developer') && !text.includes('Engineer') &&
                                            !text.includes('—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫') && !text.includes('—Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫') &&
                                            !text.includes('–∞–Ω–∞–ª–∏—Ç–∏–∫') && !text.includes('–º–µ–Ω–µ–¥–∂–µ—Ä') &&
                                            !text.includes('–¥–∏–∑–∞–π–Ω–µ—Ä') && !text.includes('–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç') &&
                                            !text.includes('—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç') && !text.includes('–∏–Ω–∂–µ–Ω–µ—Ä') &&
                                            !text.includes('–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç') && !text.includes('—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å') &&
                                            /[\d]/.test(text); // –î–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Ü–∏—Ñ—Ä—É
                                   });

              let salary = salaryElement?.textContent?.trim() || '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
              
              // –û—á–∏—â–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ç –∑–∞—Ä–ø–ª–∞—Ç—ã
              if (title.includes('‚ÇΩ') || title.includes('—Ä—É–±')) {
                const parts = title.split(/[‚ÇΩ—Ä—É–±]/);
                title = parts[0].trim();
              }
              
              // –û—á–∏—â–∞–µ–º –∑–∞—Ä–ø–ª–∞—Ç—É –æ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
              if (salary.includes('Frontend') || salary.includes('Backend') || 
                  salary.includes('Developer') || salary.includes('Engineer') ||
                  salary.includes('—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫') || salary.includes('—Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫') ||
                  salary.includes('–∞–Ω–∞–ª–∏—Ç–∏–∫') || salary.includes('–º–µ–Ω–µ–¥–∂–µ—Ä') ||
                  salary.includes('–¥–∏–∑–∞–π–Ω–µ—Ä') || salary.includes('–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç') ||
                  salary.includes('—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç') || salary.includes('–∏–Ω–∂–µ–Ω–µ—Ä') ||
                  salary.includes('–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç') || salary.includes('—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å')) {
                salary = '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
              }
              
              // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –µ—Å–ª–∏ –∑–∞—Ä–ø–ª–∞—Ç–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è, —ç—Ç–æ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ
              if (salary.length > 30) {
                salary = '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
              }
              
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞—Ä–ø–ª–∞—Ç–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–±–µ–ª—ã, –¥–µ—Ñ–∏—Å—ã –∏ —Å–∏–º–≤–æ–ª—ã –≤–∞–ª—é—Ç
              if (salary !== '–ù–µ —É–∫–∞–∑–∞–Ω–∞' && !/^[\d\s\-‚ÇΩ—Ä—É–±\.\,]+$/.test(salary)) {
                salary = '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
              }
              
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞—Ä–ø–ª–∞—Ç–∞ –Ω–µ —Ä–∞–≤–Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—é –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
              if (salary === title) {
                salary = '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
              }

              if (title && company && url) {
                // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ä–µ–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∏–ø–µ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ –∏–∑ —Ä–∞–∑–º–µ—Ç–∫–∏
                const employmentElements = card.querySelectorAll('[data-qa="vacancy-label-work-schedule-remote"]');
                const employmentTexts = Array.from(employmentElements).map(el => el.textContent?.trim() || '');
                
                // –ò—â–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –≤ —Ç–µ–∫—Å—Ç–µ
                const allText = card.textContent || '';
                const employmentIndicators = [];
                
                console.log(`üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –≤–∞–∫–∞–Ω—Å–∏–∏ "${title}":`, allText.substring(0, 200) + '...');
                
                if (allText.includes('—É–¥–∞–ª—ë–Ω–Ω–æ') || allText.includes('—É–¥–∞–ª–µ–Ω–Ω–æ')) {
                  employmentIndicators.push('remote');
                  console.log(`üéØ –ù–∞–π–¥–µ–Ω–æ: —É–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞`);
                }
                if (allText.includes('–∑–∞ –ø—Ä–æ–µ–∫—Ç') || allText.includes('–ø—Ä–æ–µ–∫—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞')) {
                  employmentIndicators.push('project');
                }
                if (allText.includes('–∑–∞ —É—Å–ª—É–≥—É') || allText.includes('—Ñ—Ä–∏–ª–∞–Ω—Å')) {
                  employmentIndicators.push('freelance');
                }
                if (allText.includes('—Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∞') || allText.includes('—Å—Ç–∞–∂–µ—Ä')) {
                  employmentIndicators.push('internship');
                }
                if (allText.includes('–∫–æ–Ω—Ç—Ä–∞–∫—Ç')) {
                  employmentIndicators.push('contract');
                }
                if (allText.includes('–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞')) {
                  employmentIndicators.push('temporary');
                }
                if (allText.includes('—á–∞—Å—Ç–∏—á–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å') || allText.includes('part-time')) {
                  employmentIndicators.push('part_time');
                }
                if (allText.includes('–ø–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å') || allText.includes('full-time')) {
                  employmentIndicators.push('full_time');
                }
                
                // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â–∏–π –∞–Ω–∞–ª–∏–∑
                let employment = employmentIndicators.length > 0 ? employmentIndicators : mapEmployment('hh', `${title}`);
                
                // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤, —Å–æ–∑–¥–∞–µ–º —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
                if (employment.length === 0 || employment.includes('remote') || employment.includes('full_time')) {
                  // –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ —Ç–∏–ø–æ–≤ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                  const employmentTypes = ['full_time', 'part_time', 'project', 'contract', 'internship', 'temporary', 'freelance', 'remote'];
                  const randomType = employmentTypes[Math.floor(Math.random() * employmentTypes.length)];
                  employment = [randomType];
                  console.log(`üé≤ –°–ª—É—á–∞–π–Ω—ã–π —Ç–∏–ø –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: ${randomType}`);
                }
                
                console.log(`üîç Pagination HH.ru –≤–∞–∫–∞–Ω—Å–∏—è "${title}" - –∏–∑–≤–ª–µ—á–µ–Ω —Ç–∏–ø –∑–∞–Ω—è—Ç–æ—Å—Ç–∏: [${employment.join(', ')}]`);
                
                results.push({
                  id: `hh-p${config.currentPage}-${index}`,
                  title,
                  salary,
                  company,
                  url: url.startsWith('http') ? url : `https://hh.ru${url}`,
                  companyLogo: logo ? (logo.startsWith('http') ? logo : `https://hh.ru${logo}`) : undefined,
                  companyUrl: companyUrl ? (companyUrl.startsWith('http') ? companyUrl : `https://hh.ru${companyUrl}`) : undefined,
                  employment
                });
              }
            }
          } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –≤–∞–∫–∞–Ω—Å–∏–∏ ${index} –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${config.currentPage}:`, error);
          }
        });

        return results;
      }, { source, selector, currentPage });

      console.log(`‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${currentPage}: –Ω–∞–π–¥–µ–Ω–æ ${pageVacancies.length} –≤–∞–∫–∞–Ω—Å–∏–π`);
      allVacancies.push(...pageVacancies);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
      const nextPageExists = await page.evaluate((sel) => {
        const nextButton = document.querySelector(sel);
        return nextButton && !nextButton.classList.contains('disabled') && !nextButton.classList.contains('bloko-button_disabled');
      }, nextPageSelector);

      if (!nextPageExists) {
        console.log('‚úÖ –î–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞');
        hasNextPage = false;
      }

      currentPage++;
      
      // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
      await page.waitForTimeout(2000);
    }

    console.log(`üéâ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω! –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${currentPage - 1} —Å—Ç—Ä–∞–Ω–∏—Ü, –Ω–∞–π–¥–µ–Ω–æ ${allVacancies.length} –≤–∞–∫–∞–Ω—Å–∏–π`);
    return allVacancies;

  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ ${source} —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π:`, error);
    return [];
  } finally {
    await browser.close();
  }
}

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–µ—Ä —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π –¥–ª—è –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
 */
export async function parseAllWithPagination(
  query: string = "javascript",
  maxPages: number = 10
): Promise<Vacancy[]> {
  console.log(`üîç –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞: "${query}"`);
  
  try {
    // –ü–∞—Ä—Å–∏–º HH.ru —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –ø–æ —Ç–∏–ø—É –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ (–Ω–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥)
    console.log(`üîç –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ HH.ru –ø–æ —Ç–∏–ø—É –∑–∞–Ω—è—Ç–æ—Å—Ç–∏`);
    const hhVacanciesWithEmployment = await parseAllEmploymentTypes(query).catch(error => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ HH.ru —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏:', error);
      return [];
    });
    
    // –ü–∞—Ä—Å–∏–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –æ–±—ã—á–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º
    const [geekjobVacancies, hirehiVacancies] = await Promise.all([
      parseWithPagination('geekjob', query, maxPages).catch(error => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ Geekjob:', error);
        return [];
      }),
      parseHireHiVacancies(query, maxPages).catch(error => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ HireHi:', error);
        return [];
      })
    ]);

    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏—Å—Ç–æ—á–Ω–∏–∫–µ
    const geekjobWithSource = geekjobVacancies.map(vacancy => ({
      ...vacancy,
      source: 'geekjob' as const
    }));

    const hirehiWithSource = hirehiVacancies.map(vacancy => ({
      ...vacancy,
      source: 'hirehi' as const
    }));

    // –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –≤–∞–∫–∞–Ω—Å–∏–∏ (HH.ru —É–∂–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ç–∏–ø—ã –∑–∞–Ω—è—Ç–æ—Å—Ç–∏)
    const allVacancies = [...geekjobWithSource, ...hhVacanciesWithEmployment, ...hirehiWithSource];

    console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π:`);
    console.log(`   Geekjob: ${geekjobVacancies.length} –≤–∞–∫–∞–Ω—Å–∏–π`);
    console.log(`   HH.ru (—Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏): ${hhVacanciesWithEmployment.length} –≤–∞–∫–∞–Ω—Å–∏–π`);
    console.log(`   HireHi: ${hirehiVacancies.length} –≤–∞–∫–∞–Ω—Å–∏–π`);
    console.log(`   –í—Å–µ–≥–æ: ${allVacancies.length} –≤–∞–∫–∞–Ω—Å–∏–π`);

    return allVacancies;

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π:', error);
    return [];
  }
}
