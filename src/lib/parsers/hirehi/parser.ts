// src/lib/parsers/hirehi/parser.ts
import { chromium } from 'playwright';
import { Vacancy } from '../unified-parser';
import { mapEmployment } from '../../types/employment';

/**
 * –ü–∞—Ä—Å–µ—Ä –¥–ª—è HireHi.ru
 */
export async function parseHireHiVacancies(
  query: string = "javascript",
  maxPages: number = 3
): Promise<Vacancy[]> {
  const browser = await chromium.launch({ headless: true });
  const page = await browser.newPage();

  try {
    await page.setExtraHTTPHeaders({
      'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
      'Accept-Language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
    });

    console.log(`üîç –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ HireHi –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞: "${query}"`);
    
    const allVacancies: Vacancy[] = [];
    let currentPage = 1;
    let hasNextPage = true;

    while (hasNextPage && currentPage <= maxPages) {
      console.log(`üìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É ${currentPage}...`);
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –ø–æ–∏—Å–∫–∞
      const searchUrl = `https://hirehi.ru/?q=${encodeURIComponent(query)}&page=${currentPage}`;
      
      if (currentPage === 1) {
        await page.goto(searchUrl, { waitUntil: 'networkidle' });
      } else {
        // –î–ª—è HireHi –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä page –≤ URL
        await page.goto(searchUrl, { waitUntil: 'networkidle' });
      }

      // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–π
      try {
        await page.waitForSelector('.job-card', { timeout: 15000 });
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞ –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        await page.waitForTimeout(3000);
      } catch (error) {
        console.log(`‚ö†Ô∏è –í–∞–∫–∞–Ω—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${currentPage}`);
        break;
      }

      // –°–æ–±–∏—Ä–∞–µ–º –≤–∞–∫–∞–Ω—Å–∏–∏ —Å —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      const pageVacancies = await page.evaluate((config) => {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä .job-card
        const cards = document.querySelectorAll('.job-card');
        console.log(`üîç –ù–∞–π–¥–µ–Ω–æ ${cards.length} –∫–∞—Ä—Ç–æ—á–µ–∫ —Å —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º .job-card`);

        const results = [];
        
        console.log(`üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º ${cards.length} –∫–∞—Ä—Ç–æ—á–µ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ...`);

        cards.forEach((card, index) => {
          try {
            // –ò—â–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏ - –≤ HireHi —ç—Ç–æ –æ–±—ã—á–Ω–æ –≤ —Ç–µ–∫—Å—Ç–µ –∫–∞—Ä—Ç–æ—á–∫–∏
            let title = '';
            const allText = card.textContent || '';
            const lines = allText.split('\n').map(line => line.trim()).filter(line => line);
            
            // –ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ (–æ–±—ã—á–Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç "—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫", "–º–µ–Ω–µ–¥–∂–µ—Ä" –∏ —Ç.–¥.)
            for (const line of lines) {
              if (line.includes('—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫') || line.includes('–º–µ–Ω–µ–¥–∂–µ—Ä') || 
                  line.includes('–¥–∏–∑–∞–π–Ω–µ—Ä') || line.includes('–∞–Ω–∞–ª–∏—Ç–∏–∫') ||
                  line.includes('—Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫') || line.includes('–∏–Ω–∂–µ–Ω–µ—Ä') ||
                  line.includes('Frontend') || line.includes('Backend') ||
                  line.includes('Developer') || line.includes('Engineer')) {
                title = line;
                break;
              }
            }
            
            // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º, –±–µ—Ä–µ–º —Å–∞–º—É—é –¥–ª–∏–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É (–∫—Ä–æ–º–µ –∫–æ–º–ø–∞–Ω–∏–∏)
            if (!title) {
              const filteredLines = lines.filter(line => 
                line.length > 5 && 
                !line.includes('‚ÇΩ') && 
                !line.includes('—Ä—É–±') &&
                !line.includes('—Å–µ–≥–æ–¥–Ω—è') && 
                !line.includes('–≤—á–µ—Ä–∞') &&
                !line.includes('Activa') && // –ò—Å–∫–ª—é—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–π
                !line.includes('Management')
              );
              
              if (filteredLines.length > 0) {
                title = filteredLines.reduce((longest, current) => 
                  current.length > longest.length ? current : longest
                );
              }
            }

            // –ò—â–µ–º –∫–æ–º–ø–∞–Ω–∏—é - –æ–±—ã—á–Ω–æ –≤ –Ω–∞—á–∞–ª–µ —Ç–µ–∫—Å—Ç–∞
            let company = '';
            const companyElement = card.querySelector('.job-company-name');
            if (companyElement) {
              company = companyElement.textContent?.trim() || '';
            } else {
              // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É, –∏—â–µ–º –≤ —Ç–µ–∫—Å—Ç–µ
              for (const line of lines) {
                if (line && !line.includes('‚ÇΩ') && !line.includes('—Ä—É–±') && 
                    !line.includes('—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫') && !line.includes('–º–µ–Ω–µ–¥–∂–µ—Ä') &&
                    !line.includes('—Å–µ–≥–æ–¥–Ω—è') && !line.includes('–≤—á–µ—Ä–∞') &&
                    line.length > 2 && line.length < 50) {
                  company = line;
                  break;
                }
              }
            }

            // –ò—â–µ–º –∑–∞—Ä–ø–ª–∞—Ç—É
            let salary = '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
            const salaryElement = Array.from(card.querySelectorAll('*')).find(el => {
              const text = el.textContent || '';
              return (text.includes('‚ÇΩ') || text.includes('—Ä—É–±')) && 
                     text.length < 50 && 
                     text.length > 5 &&
                     /[\d]/.test(text);
            });

            if (salaryElement) {
              salary = salaryElement.textContent?.trim() || '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
            }

            // –ò—â–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é
            const vacancyLink = card.querySelector('a[href*="/vacancy/"]') || 
                               card.querySelector('a[href*="/job/"]') ||
                               card.querySelector('a');

            let url = vacancyLink?.getAttribute('href') || '';
            
            // –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º URL –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–∫–∏
            if (!url) {
              // –í HireHi —Å—Å—ã–ª–∫–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏, —Å–æ–∑–¥–∞–µ–º URL –Ω–∞ –æ—Å–Ω–æ–≤–µ ID –∏–ª–∏ –¥–∞–Ω–Ω—ã—Ö
              const cardId = card.getAttribute('data-id') || card.getAttribute('id') || `hirehi-${index}`;
              url = `https://hirehi.ru/vacancy/${cardId}`;
            }

            // –û—á–∏—â–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ç –∑–∞—Ä–ø–ª–∞—Ç—ã
            if (title.includes('‚ÇΩ') || title.includes('—Ä—É–±')) {
              const parts = title.split(/[‚ÇΩ—Ä—É–±]/);
              title = parts[0].trim();
            }
            
            // –û—á–∏—â–∞–µ–º –∑–∞—Ä–ø–ª–∞—Ç—É –æ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
            if (salary.includes('Frontend') || salary.includes('Backend') || 
                salary.includes('Developer') || salary.includes('Engineer') ||
                salary.includes('—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫') || salary.includes('—Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫') ||
                salary.includes('–∞–Ω–∞–ª–∏—Ç–∏–∫') || salary.includes('–º–µ–Ω–µ–¥–∂–µ—Ä') ||
                salary.includes('–¥–∏–∑–∞–π–Ω–µ—Ä') || salary.includes('–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç') ||
                salary.includes('—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç') || salary.includes('–∏–Ω–∂–µ–Ω–µ—Ä') ||
                salary.includes('–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç') || salary.includes('—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å')) {
              salary = '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
            }
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –µ—Å–ª–∏ –∑–∞—Ä–ø–ª–∞—Ç–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è
            if (salary.length > 30) {
              salary = '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞—Ä–ø–ª–∞—Ç–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–±–µ–ª—ã, –¥–µ—Ñ–∏—Å—ã –∏ —Å–∏–º–≤–æ–ª—ã –≤–∞–ª—é—Ç
            if (salary !== '–ù–µ —É–∫–∞–∑–∞–Ω–∞' && !/^[\d\s\-‚ÇΩ—Ä—É–±\.\,]+$/.test(salary)) {
              salary = '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞—Ä–ø–ª–∞—Ç–∞ –Ω–µ —Ä–∞–≤–Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—é –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
            if (salary === title) {
              salary = '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
            }

            // –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            console.log(`üîç –ö–∞—Ä—Ç–æ—á–∫–∞ ${index}: title="${title}", company="${company}", salary="${salary}"`);
            
            if (title && company && url) {
              // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∑–∞–Ω—è—Ç–æ—Å—Ç–∏
              const employment = mapEmployment('hirehi', `${title} ${description || ''}`);
              
              results.push({
                id: `hirehi-p${config.currentPage}-${index}`,
                title,
                salary,
                company,
                url: url.startsWith('http') ? url : `https://hirehi.ru${url}`,
                source: 'hirehi',
                employment
              });
            } else {
              console.log(`‚ùå –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É ${index}: –Ω–µ–ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ`);
            }

          } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –≤–∞–∫–∞–Ω—Å–∏–∏ ${index} –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${config.currentPage}:`, error);
          }
        });

        return results;
      }, { currentPage });

      console.log(`‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${currentPage}: –Ω–∞–π–¥–µ–Ω–æ ${pageVacancies.length} –≤–∞–∫–∞–Ω—Å–∏–π`);
      allVacancies.push(...pageVacancies);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
      const nextPageExists = await page.evaluate(() => {
        // –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞" –∏–ª–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏—é
        const nextButton = document.querySelector('.pagination .next, .pagination a[rel="next"], .next-page, [data-testid="next-page"]');
        return nextButton && !nextButton.classList.contains('disabled');
      });

      if (!nextPageExists) {
        console.log('‚úÖ –î–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞');
        hasNextPage = false;
      }

      currentPage++;
      
      // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
      await page.waitForTimeout(2000);
    }

    console.log(`üéâ –ü–∞—Ä—Å–∏–Ω–≥ HireHi –∑–∞–≤–µ—Ä—à–µ–Ω! –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${currentPage - 1} —Å—Ç—Ä–∞–Ω–∏—Ü, –Ω–∞–π–¥–µ–Ω–æ ${allVacancies.length} –≤–∞–∫–∞–Ω—Å–∏–π`);
    return allVacancies;

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ HireHi:', error);
    return [];
  } finally {
    await browser.close();
  }
}
