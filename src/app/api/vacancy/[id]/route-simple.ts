// –ü—Ä–æ—Å—Ç–æ–π API endpoint –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
import { NextRequest, NextResponse } from 'next/server';

export async function GET(
  request: NextRequest,
  { params }: { params: { id: string } }
) {
  try {
    const vacancyExternalId = params.id;
    console.log(`üîç –ü—Ä–æ—Å—Ç–æ–π API /api/vacancy/${vacancyExternalId} –≤—ã–∑–≤–∞–Ω`);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    return NextResponse.json({ 
      vacancy: {
        id: 1,
        externalId: vacancyExternalId,
        title: '–¢–µ—Å—Ç–æ–≤–∞—è –≤–∞–∫–∞–Ω—Å–∏—è',
        company: '–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è',
        location: '–ú–æ—Å–∫–≤–∞',
        salary: '100000 - 150000 RUB',
        url: 'https://example.com',
        source: 'Test',
        publishedAt: new Date().toISOString(),
        fullDescription: '–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ',
        requirements: '–¢–µ—Å—Ç–æ–≤—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è',
        benefits: '–¢–µ—Å—Ç–æ–≤—ã–µ –ª—å–≥–æ—Ç—ã',
        conditions: '–¢–µ—Å—Ç–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è',
        companyLogo: '',
        companyUrl: '',
        employmentType: 'full_time',
        experienceLevel: 'middle',
        remoteType: 'office',
        aiAnalysis: {
          specialization: 'design',
          employment: ['full_time'],
          experience: 'middle',
          technologies: ['Figma', 'Sketch'],
          remote: false,
          requirements: [],
          benefits: [],
          summary: '–¢–µ—Å—Ç–æ–≤–æ–µ —Ä–µ–∑—é–º–µ'
        }
      }
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Å—Ç–æ–º API:', error);
    return NextResponse.json(
      { error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' },
      { status: 500 }
    );
  }
}














