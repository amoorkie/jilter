// API –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≤–∞–∫–∞–Ω—Å–∏–π
import { NextRequest, NextResponse } from 'next/server';

// –ü—Ä–æ—Å—Ç–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Redis –∏–ª–∏ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
let lastUpdateTime = Date.now();

export async function GET(request: NextRequest) {
  try {
    return NextResponse.json({
      lastUpdate: lastUpdateTime,
      message: '–í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'
    });
  } catch (error) {
    return NextResponse.json(
      { error: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è' },
      { status: 500 }
    );
  }
}

export async function POST(request: NextRequest) {
  try {
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    lastUpdateTime = Date.now();
    
    console.log(`üîÑ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: ${new Date(lastUpdateTime).toISOString()}`);
    
    return NextResponse.json({
      success: true,
      lastUpdate: lastUpdateTime,
      message: '–í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–æ'
    });
  } catch (error) {
    return NextResponse.json(
      { error: '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏' },
      { status: 500 }
    );
  }
}














