// –¢–µ—Å—Ç DeepSeek API
require('dotenv').config({ path: '.env.local' });

async function testDeepSeekAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º DeepSeek API...');
  
  const apiKey = process.env.DEEPSEEK_API_KEY;
  console.log('üîë API –∫–ª—é—á:', apiKey ? '–ù–∞–π–¥–µ–Ω' : '–ù–ï –ù–ê–ô–î–ï–ù');
  
  if (!apiKey || apiKey === 'sk-your-deepseek-api-key-here') {
    console.log('‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!');
    return;
  }
  
  try {
    const response = await fetch('https://api.deepseek.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${apiKey}`
      },
      body: JSON.stringify({
        model: 'deepseek-chat',
        messages: [
          {
            role: 'user',
            content: '–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç API. –û—Ç–≤–µ—Ç—å –∫–æ—Ä–æ—Ç–∫–æ: "API —Ä–∞–±–æ—Ç–∞–µ—Ç!"'
          }
        ],
        max_tokens: 50
      })
    });
    
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ DeepSeek API —Ä–∞–±–æ—Ç–∞–µ—Ç!');
      console.log('üìù –û—Ç–≤–µ—Ç:', data.choices[0].message.content);
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ API:', response.status, response.statusText);
      const errorText = await response.text();
      console.log('üìù –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', errorText);
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message);
  }
}

testDeepSeekAPI();














