// –ü–æ–∏—Å–∫ –¥–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∏—Ö –≤–∞–∫–∞–Ω—Å–∏–π –Ω–∞ Geekjob
const axios = require('axios');
const cheerio = require('cheerio');

async function testGeekjobDesign() {
  console.log('üîç –ü–æ–∏—Å–∫ –¥–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∏—Ö –≤–∞–∫–∞–Ω—Å–∏–π –Ω–∞ Geekjob');
  
  try {
    // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    const queries = [
      '–¥–∏–∑–∞–π–Ω–µ—Ä',
      'designer',
      'ui',
      'ux',
      '–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω–µ—Ä',
      '–ø—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π –¥–∏–∑–∞–π–Ω–µ—Ä'
    ];
    
    for (const query of queries) {
      console.log(`\nüîç –ü–æ–∏—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É: "${query}"`);
      
      const url = `https://geekjob.ru/?q=${encodeURIComponent(query)}&page=1`;
      const response = await axios.get(url, {
        headers: {
          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
          'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
          'Accept-Language': 'ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3'
        }
      });
      
      const $ = cheerio.load(response.data);
      const vacancyLinks = $('a[href*="/vacancy/"]');
      
      console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —Å—Å—ã–ª–æ–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏–∏: ${vacancyLinks.length}`);
      
      let designVacancies = 0;
      vacancyLinks.each((index, link) => {
        const title = $(link).text().trim();
        if (title) {
          const isDesign = title.toLowerCase().includes('–¥–∏–∑–∞–π–Ω') || 
                          title.toLowerCase().includes('designer') ||
                          title.toLowerCase().includes('ui') ||
                          title.toLowerCase().includes('ux');
          
          if (isDesign) {
            console.log(`   ‚úÖ "${title}"`);
            designVacancies++;
          }
        }
      });
      
      console.log(`üé® –î–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∏—Ö –≤–∞–∫–∞–Ω—Å–∏–π: ${designVacancies}`);
      
      if (designVacancies > 0) {
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω—ã –¥–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ "${query}"`);
        break;
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

testGeekjobDesign();















