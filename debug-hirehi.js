// –î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ HireHi –ø–∞—Ä—Å–µ—Ä–∞
const { chromium } = require('playwright');

async function debugHireHi() {
  const browser = await chromium.launch({ headless: false });
  const page = await browser.newPage();

  try {
    console.log('üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ HireHi...');
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –ø–æ–∏—Å–∫–æ–º
    const searchUrl = 'https://hirehi.ru/?q=javascript';
    console.log(`üìÑ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞: ${searchUrl}`);
    
    await page.goto(searchUrl, { waitUntil: 'networkidle' });
    console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ JavaScript
    await page.waitForTimeout(5000);
    console.log('‚è∞ –ñ–¥–∞–ª–∏ 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ JS');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∏
    const cards = await page.$$('.job-card');
    console.log(`üîç –ù–∞–π–¥–µ–Ω–æ ${cards.length} –∫–∞—Ä—Ç–æ—á–µ–∫ —Å —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º .job-card`);
    
    if (cards.length === 0) {
      console.log('‚ùå –ö–∞—Ä—Ç–æ—á–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∏—â–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã...');
      
      // –ü—Ä–æ–±—É–µ–º –¥—Ä—É–≥–∏–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
      const alternativeSelectors = [
        '[class*="job"]',
        '[class*="card"]',
        '[class*="vacancy"]',
        'div[class*="job"]',
        'div[class*="card"]'
      ];
      
      for (const selector of alternativeSelectors) {
        const elements = await page.$$(selector);
        console.log(`üîç –°–µ–ª–µ–∫—Ç–æ—Ä ${selector}: ${elements.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`);
        
        if (elements.length > 0) {
          // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
          const firstEl = elements[0];
          const text = await firstEl.textContent();
          const className = await firstEl.getAttribute('class');
          console.log(`   –ö–ª–∞—Å—Å: ${className}`);
          console.log(`   –¢–µ–∫—Å—Ç: ${text.substring(0, 100)}...`);
        }
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤–æ–æ–±—â–µ –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
      const bodyText = await page.textContent('body');
      console.log(`üìÑ –û–±—â–∏–π —Ç–µ–∫—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${bodyText.substring(0, 200)}...`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏
      page.on('console', msg => {
        if (msg.type() === 'error') {
          console.log('‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Å–æ–ª–∏:', msg.text());
        }
      });
      
    } else {
      console.log('‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞–π–¥–µ–Ω—ã, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º...');
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç–æ—á–∫—É
      const firstCard = cards[0];
      const cardText = await firstCard.textContent();
      const cardHTML = await firstCard.innerHTML();
      
      console.log('üìÑ –¢–µ–∫—Å—Ç –∫–∞—Ä—Ç–æ—á–∫–∏:', cardText.substring(0, 200));
      console.log('üèóÔ∏è HTML –∫–∞—Ä—Ç–æ—á–∫–∏:', cardHTML.substring(0, 300));
      
      // –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫–∏
      const links = await firstCard.$$('a');
      console.log(`üîó –°—Å—ã–ª–æ–∫ –≤ –∫–∞—Ä—Ç–æ—á–∫–µ: ${links.length}`);
      
      const images = await firstCard.$$('img');
      console.log(`üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∫–∞—Ä—Ç–æ—á–∫–µ: ${images.length}`);
    }
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
    await page.screenshot({ path: 'hirehi-debug.png' });
    console.log('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ hirehi-debug.png');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ª–∞–¥–∫–µ:', error);
  } finally {
    await browser.close();
  }
}

debugHireHi();
