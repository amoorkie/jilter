const axios = require('axios');

async function testWorkingTelegramParsing() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—á–∏–µ Telegram –∫–∞–Ω–∞–ª—ã...');
  
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ —Å —Ä–∞–±–æ—á–∏–º–∏ RSS —Ñ–∏–¥–∞–º–∏...');
    const response = await axios.get('http://localhost:3000/api/vacancies?q=–¥–∏–∑–∞–π–Ω–µ—Ä&maxVacancies=20');
    
    console.log('üìä –°—Ç–∞—Ç—É—Å:', response.status);
    console.log('üìä –ù–∞–π–¥–µ–Ω–æ –≤–∞–∫–∞–Ω—Å–∏–π:', response.data.vacancies.length);

    console.log('\nüìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏:\n');
    response.data.vacancies.forEach((vacancy, index) => {
      console.log(`${index + 1}. ${vacancy.title}`);
      console.log(`   –ö–æ–º–ø–∞–Ω–∏—è: ${vacancy.company}`);
      console.log(`   –ó–∞—Ä–ø–ª–∞—Ç–∞: ${vacancy.salary}`);
      console.log(`   –ò—Å—Ç–æ—á–Ω–∏–∫: ${vacancy.source}`);
      console.log('');
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram –≤–∞–∫–∞–Ω—Å–∏–∏
    const telegramVacancies = response.data.vacancies.filter(v => 
      v.source && v.source.toLowerCase().includes('telegram')
    );
    
    console.log(`üìä Telegram –≤–∞–∫–∞–Ω—Å–∏–π: ${telegramVacancies.length}`);
    
    if (telegramVacancies.length > 0) {
      console.log('\nüéâ Telegram –≤–∞–∫–∞–Ω—Å–∏–∏ –Ω–∞–π–¥–µ–Ω—ã!');
      telegramVacancies.forEach((vacancy, index) => {
        console.log(`${index + 1}. ${vacancy.title} (${vacancy.source})`);
      });
    } else {
      console.log('\n‚ö†Ô∏è Telegram –≤–∞–∫–∞–Ω—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }

    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω–∫—É...');
    const adminResponse = await axios.get('http://localhost:3000/api/admin/pending');
    console.log('üìä –û–∂–∏–¥–∞—é—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏:', adminResponse.data.vacancies.length);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Telegram –ø–∞—Ä—Å–∏–Ω–≥–∞:', error.message);
  }
}

testWorkingTelegramParsing();















