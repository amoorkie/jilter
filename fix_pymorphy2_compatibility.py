#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ pymorphy2 —Å Python 3.13
–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–π inspect.getargspec –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
"""

import inspect
import sys

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Python
if sys.version_info >= (3, 11):
    # –í Python 3.11+ inspect.getargspec –±—ã–ª —É–¥–∞–ª–µ–Ω
    # –î–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –æ–±—Ä–∞—Ç–Ω–æ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    def getargspec(func):
        """–û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –¥–ª—è inspect.getargspec"""
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π inspect.signature
            sig = inspect.signature(func)
            args = []
            varargs = None
            varkw = None
            defaults = []
            kwonlyargs = []
            kwonlydefaults = {}
            annotations = {}
            
            for param_name, param in sig.parameters.items():
                if param.kind == inspect.Parameter.POSITIONAL_OR_KEYWORD:
                    args.append(param_name)
                    if param.default != inspect.Parameter.empty:
                        defaults.append(param.default)
                elif param.kind == inspect.Parameter.VAR_POSITIONAL:
                    varargs = param_name
                elif param.kind == inspect.Parameter.VAR_KEYWORD:
                    varkw = param_name
                elif param.kind == inspect.Parameter.KEYWORD_ONLY:
                    kwonlyargs.append(param_name)
                    if param.default != inspect.Parameter.empty:
                        kwonlydefaults[param_name] = param.default
                
                if param.annotation != inspect.Parameter.empty:
                    annotations[param_name] = param.annotation
            
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å—Ç–∞—Ä–æ–≥–æ getargspec
            return inspect.ArgSpec(args, varargs, varkw, defaults)
            
        except Exception as e:
            print(f"Warning: Could not create getargspec for {func}: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π ArgSpec –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            return inspect.ArgSpec([], None, None, [])
    
    # –ú–æ–Ωkey patch –¥–ª—è inspect.getargspec
    inspect.getargspec = getargspec
    print("‚úÖ Added inspect.getargspec compatibility for Python 3.13")

else:
    print("‚úÖ Python version < 3.11, no compatibility fix needed")

print("üîß pymorphy2 compatibility fix applied")





